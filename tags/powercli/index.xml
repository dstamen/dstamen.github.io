<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerCLI on davidstamen</title><link>https://davidstamen.com/tags/powercli/</link><description>Recent content in PowerCLI on davidstamen</description><generator>Hugo</generator><language>en</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Tue, 10 Jan 2023 12:00:00 +0000</lastBuildDate><atom:link href="https://davidstamen.com/tags/powercli/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Map an Raw Device Mapping (RDM) to a Pure Storage Volume using PowerCLI</title><link>https://davidstamen.com/2023/01/10/how-to-map-an-raw-device-mapping-rdm-to-a-pure-storage-volume-using-powercli/</link><pubDate>Tue, 10 Jan 2023 12:00:00 +0000</pubDate><guid>https://davidstamen.com/2023/01/10/how-to-map-an-raw-device-mapping-rdm-to-a-pure-storage-volume-using-powercli/</guid><description>&lt;p>When running operations against an RDM, you may need to know the backing volume. Unfortunately with RDM&amp;rsquo;s there is no easy way to identify this without doing a manual comparison between vCenter Server &amp;amp; the Array. This post will explain how to map an RDM to a Pure Volume to extract the Name and Serial number of the backing volume.&lt;/p></description></item><item><title>Using PowerCLI to Deploy the Pure Storage VMware Appliance</title><link>https://davidstamen.com/2021/07/29/using-powercli-to-deploy-the-pure-storage-vmware-appliance/</link><pubDate>Thu, 29 Jul 2021 12:00:00 +0000</pubDate><guid>https://davidstamen.com/2021/07/29/using-powercli-to-deploy-the-pure-storage-vmware-appliance/</guid><description>&lt;p>Now that the latest Pure Storage vSphere Client Plugin is available as a remote plugin is is now deployed as an OVA. I have put together this quick script to automate deploying of the Pure Storage VMware Appliance.&lt;/p></description></item><item><title>Using Pure1 Meta for Intelligent Datastore Selection and VM Provisioning</title><link>https://davidstamen.com/2020/11/11/using-pure1-meta-for-intelligent-datastore-selection-and-vm-provisioning/</link><pubDate>Wed, 11 Nov 2020 08:00:00 +0000</pubDate><guid>https://davidstamen.com/2020/11/11/using-pure1-meta-for-intelligent-datastore-selection-and-vm-provisioning/</guid><description>&lt;p>When it comes to monitoring your Pure Storage environment Pure1 is a great place for that. It is also a great place to use your analytic&amp;rsquo;s data to your advantage and use it for intelligent VMware provisioning! In this blog post I will cover how to use this data to your advantage to make sure you can easily deploy VM&amp;rsquo;s to the most optimal array and datastore.&lt;/p></description></item><item><title>Using PowerCLI to Provision your Pure Storage Infrastructure</title><link>https://davidstamen.com/2020/08/17/using-powercli-to-provision-your-pure-storage-infrastructure/</link><pubDate>Mon, 17 Aug 2020 08:00:00 +0000</pubDate><guid>https://davidstamen.com/2020/08/17/using-powercli-to-provision-your-pure-storage-infrastructure/</guid><description>&lt;p>In the continuation of my Automating your Pure Storage Infrastructure blog series, next I will be covering how to use PowerCLI to provision your Pure Storage Infrastructure. This has been one of the most popular ways to automate provisioning, and alot of work has been put into making this an ideal automation solution.&lt;/p></description></item><item><title>Using the VMware Event Broker Appliance to Automatically Expand a Pure Storage FlashArray Datastore</title><link>https://davidstamen.com/using-veba-to-expand-pure-datastore/</link><pubDate>Wed, 24 Jun 2020 08:30:00 +0000</pubDate><guid>https://davidstamen.com/using-veba-to-expand-pure-datastore/</guid><description>&lt;p>Something we get asked quite often it seems here at Pure Storage, is can we automatically expand a datastore when it gets full? The answer is yes! With all of the integrations with automation platformsm, Pure Storage Arrays have many options. This blog will cover how to handle this with the VMware Event Broker Appliance (VEBA)!&lt;/p></description></item><item><title>Updating the vCenter Server Appliance (VCSA) with PowerCLI - Revisited</title><link>https://davidstamen.com/2020/06/22/updating-the-vcenter-server-appliance-vcsa-with-powercli-revisited/</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2020/06/22/updating-the-vcenter-server-appliance-vcsa-with-powercli-revisited/</guid><description>&lt;p>In previous blogs, I covered how to update your VCSA using &lt;a href="https://davidstamen.com/2019/01/31/patching-the-vcenter-server-appliance-vcsa-using-the-rest-api-part-2-powershell-module/">PowerCLI&lt;/a> and with &lt;a href="https://davidstamen.com/2018/12/20/patching-the-vcenter-server-appliance-vcsa-using-the-rest-api/">Postman&lt;/a>. I also had multiple code sessions at &lt;a href="https://videos.vmworld.com/global/2019?q=CODE1817UR">VMworld 2019&lt;/a> where I got great feedback on the module. It&amp;rsquo;s been a while since I have looked at the module, and time has passed so I thought it was due for an update. The module will no longer need to be manually imported, it is now located in the &lt;a href="https://www.powershellgallery.com/packages/VMware.Community.VCSA.Update">Powershell Gallery!&lt;/a>&lt;/p></description></item><item><title>Using PowerCLI to Deploy the Site Recovery Manager 8.3 Appliance</title><link>https://davidstamen.com/2020/04/16/using-powercli-to-deploy-the-site-recovery-manager-8.3-appliance/</link><pubDate>Thu, 16 Apr 2020 08:30:00 +0000</pubDate><guid>https://davidstamen.com/2020/04/16/using-powercli-to-deploy-the-site-recovery-manager-8.3-appliance/</guid><description>&lt;p>My latest project was to rebuild one of my labs to run vSphere 7 and Site Recovery Manager 8.3. In my current role I am constantly am deploying new lab environments for certain demos. If i can avoid using a manual process for it I will, in this case I am showing how you can deploy the SRM OVF using PowerCLI.&lt;/p>
&lt;h4 id="pre-requsites">Pre-Requsites&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.vmware.com/support/developer/PowerCLI/">VMware PowerCLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="link-to-script">Link to Script&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/deploy-srm83.ps1">deploy-srm83.ps1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="preparing-to-execute-the-script">Preparing to Execute the Script&lt;/h4>
&lt;p>The script is pretty straight forward, you will need to extract the SRM 8.3 ISO and fill in the appropriate variables on the script.&lt;/p></description></item><item><title>Glad to be part of the Inaugural VMware{code} Coach Program</title><link>https://davidstamen.com/2020/03/26/glad-to-be-part-of-the-inaugural-vmwarecode-coach-program/</link><pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2020/03/26/glad-to-be-part-of-the-inaugural-vmwarecode-coach-program/</guid><description>&lt;p>VMware has been working on building an influencer program for the VMware{code} community for sometime. I am proud to announce I am one of the inaugural coaches for 2020!&lt;/p></description></item><item><title>Installing and Updating the Pure Storage vSphere Plugin</title><link>https://davidstamen.com/2020/03/03/installing-and-updating-the-pure-storage-vsphere-plugin/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2020/03/03/installing-and-updating-the-pure-storage-vsphere-plugin/</guid><description>&lt;p>Welcome to the first of many Pure Storage blogs. As I get ramped up with the latest information I plan to do a series of getting started with Pure Storage features. These blogs will cover things such as the vSphere Client (HTML5) Plugin, FlashArray, FlashBlade and integrations with other VMware products. First up is learning to install and update the Pure Storage vSphere Client Plugin.&lt;/p></description></item><item><title>Patching the vCenter Server Appliance (VCSA) using the REST API - Part 2 (PowerCLI Module)</title><link>https://davidstamen.com/2019/01/31/patching-the-vcenter-server-appliance-vcsa-using-the-rest-api-part-2-powershell-module/</link><pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2019/01/31/patching-the-vcenter-server-appliance-vcsa-using-the-rest-api-part-2-powershell-module/</guid><description>&lt;p>Previously I covered how to use the &lt;a href="https://blogs.vmware.com/vsphere/2018/09/upgrading-platform-services-controller-and-vcenter-server-via-the-cli-installer.html?cid=70134000001kxaB&amp;amp;src=so_5c783ca7348a0">VCSA Installer to do a scripted upgrade&lt;/a> and then I covered &lt;a href="https://davidstamen.com/2018/12/20/patching-the-vcenter-server-appliance-vcsa-using-the-rest-api/">Patching the vCenter Server Appliance (VCSA) using the REST API - Part 1 (Postman Collection)&lt;/a> However, after learning recently how to call API&amp;rsquo;s from Powershell I thought to myself, why not write a Powershell Module for this?&lt;/p>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Using tools such as &lt;a href="https://www.getpostman.com/">Postman&lt;/a> can make it utilizing API&amp;rsquo;s a bit easier, but you still need to be familiar with a separate tool or UI. I was able to develop my own version and build my first Powershell Module that you can use to patch the VCSA in a simple method. Some of the function names below may not be 100% exact and this is due to the accepted verbs for Powershell. If you have further recommendations I would be happy to entertain changing the Powershell verbage.&lt;/p></description></item><item><title>Using PowerCLI to Add vRealize Operations License Key</title><link>https://davidstamen.com/2017/07/27/using-powercli-to-add-vrealize-operations-license-key/</link><pubDate>Thu, 27 Jul 2017 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2017/07/27/using-powercli-to-add-vrealize-operations-license-key/</guid><description>&lt;p>I have been working on doing a vCenter Consolidation Project. This included migrating our systems to a new vRealize Operations Server. This particular one included 73 different vSOM keys, and as you may know there is currently no way to enter in multiple keys at a time. I reached out to Kyle Ruddy and he informed me there is an API to do this, and that started my adventure to get this working.&lt;/p></description></item><item><title>Using PowerCLI to Set vCenter Permissions on Datacenter</title><link>https://davidstamen.com/2017/04/17/using-powercli-to-set-vcenter-permissions-on-datacenter/</link><pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2017/04/17/using-powercli-to-set-vcenter-permissions-on-datacenter/</guid><description>&lt;p>I have been working on doing a vCenter Consolidation Project. This has meant recreating multiple permissions groups. I couldnt find an easy way to apply permissions at a datacenter so I updated this script to be used.&lt;/p>
&lt;h4 id="pre-requsites">&lt;em>&lt;strong>Pre-Requsites&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.vmware.com/support/developer/PowerCLI/">VMware PowerCLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="link-to-script">&lt;em>&lt;strong>Link to Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/Set-vCenterPermissions.ps1">Set-vCenterPermissions.ps1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/permissions.csv">permissions.csv&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="preparing-to-execute-the-script">&lt;em>&lt;strong>Preparing to Execute the Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;p>The script is pretty straight forward, just need to update columns in the CSV such as Datacenter, Group and Role.&lt;/p></description></item><item><title>Using PowerCLI to Get and Set DVS Traffic Shaping Settings</title><link>https://davidstamen.com/2016/04/21/using-powercli-to-get-and-set-dvs-traffic-shaping-settings/</link><pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2016/04/21/using-powercli-to-get-and-set-dvs-traffic-shaping-settings/</guid><description>&lt;p>I have been in process in configuring traffic shaping for multiple port groups. It seems with PowerCLI 6.3 R1 there are no native Powershell Cmdlets. Luckily I stumbled across &lt;a href="http://www.lucd.info/2011/06/11/dvswitch-scripting-part-9-traffic-shaping/">@Lucd&lt;/a> and his PowerCLI functions to manage these settings, i have put these into a script to mass get and set the settings for all port groups of a DVS&amp;rsquo;s.&lt;/p>
&lt;h4 id="pre-requsites">&lt;em>&lt;strong>Pre-Requsites&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.vmware.com/support/developer/PowerCLI/">VMware PowerCLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="link-to-script">&lt;em>&lt;strong>Link to Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/Get-VMwareTrafficShapingSettings.ps1">Get-VMwareTrafficShapingSettings.ps1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/Set-VMwareTrafficShapingSettings.ps1">Set-VMwareTrafficShapingSettings.ps1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="preparing-to-execute-the-script">&lt;em>&lt;strong>Preparing to Execute the Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;p>The script is pretty straight forward, just need to define a few variables seen below and then you execute the script. I will walk you through the process.&lt;/p></description></item><item><title>Using PowerCLI to Install Host VIBs</title><link>https://davidstamen.com/2016/03/03/using-powercli-to-install-host-vibs/</link><pubDate>Thu, 03 Mar 2016 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2016/03/03/using-powercli-to-install-host-vibs/</guid><description>&lt;p>So currently Cisco has an issue with installing their ENIC and FNIC VIBs through Update Manager for ESXi 6.x. Until that is resolved I need to manually push out patches to these hosts. Obviously I do not want to do this manually, so I will be utilizing PowerCLI to accomplish this task.&lt;/p>
&lt;h4 id="pre-requsites">&lt;em>&lt;strong>Pre-Requsites&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.vmware.com/support/developer/PowerCLI/">VMware PowerCLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="link-to-script">&lt;em>&lt;strong>Link to Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/Install-HostVIB.ps1">Install-HostVIB.ps1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="preparing-to-execute-the-script">&lt;em>&lt;strong>Preparing to Execute the Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;p>The script is pretty straight forward, just need to define a few variables seen below and then you execute the script. I will walk you through the process.&lt;/p></description></item><item><title>Using PowerCLI to Install Software in a Guest VM</title><link>https://davidstamen.com/2016/01/29/using-powercli-to-install-software-in-a-guest-vm/</link><pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2016/01/29/using-powercli-to-install-software-in-a-guest-vm/</guid><description>&lt;p>I have been constantly trying to figure out the best way to deploy updated agents to some of our virtual desktops. It isnt a large environment so I have no need for SCCM or other deployment tools, but its big enough having to RDP to each VM was a pain. I finally decided to bang out a script, and surprised how well it works.&lt;/p>
&lt;h4 id="pre-requsites">&lt;em>&lt;strong>Pre-Requsites&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.vmware.com/support/developer/PowerCLI/">VMware PowerCLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="link-to-script">&lt;em>&lt;strong>Link to Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dstamen/PowerCLI/blob/master/InstallVMSoftware.ps1">InstallVMSoftware.ps1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="preparing-to-execute-the-script">&lt;em>&lt;strong>Preparing to Execute the Script&lt;/strong>&lt;/em>&lt;/h4>
&lt;p>The script is pretty straight forward, just need to define a few variables seen below and then you execute the script. I will walk you through the process.&lt;/p></description></item><item><title>Using PowerCLI to Replicate Templates to Multiple Clusters</title><link>https://davidstamen.com/2016/01/26/using-powercli-to-replicate-templates-to-multiple-clusters/</link><pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2016/01/26/using-powercli-to-replicate-templates-to-multiple-clusters/</guid><description>&lt;p>We have multiple clusters within our vCenters that are defined as a rack. Each rack has its own storage, so storage is not shared between clusters. I needed to develop a way to easily replicate templates between clusters, so a local copy existed on each cluster to take advantage of VAAI.&lt;/p>
&lt;p>I really wanted to utilize the vSphere Content Libary for these, but there is currently no publicly available documentation on how to deploy a VM from a Content Library via a Script. I am hoping when that is available, I will update this post.&lt;/p></description></item><item><title>Unable to Boot EFI VM on ESXi FC Storage</title><link>https://davidstamen.com/2016/01/13/unable-to-boot-efi-vm-on-esxi-fc-storage/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2016/01/13/unable-to-boot-efi-vm-on-esxi-fc-storage/</guid><description>&lt;p>For the past week, I have been troubleshooting the strangest issue. I have been attempting to move some Windows 8.1 VM&amp;rsquo;s from our legacy datacenter(iSCSI) to our new datacenter(FC).&lt;/p>
&lt;p>Whenever I would move the VM to our new DC, it would fail to boot properly. It would boot straight to Windows Recovery. If I moved the same VM to any other type of storage(NFS, iSCSI, Local) the VM would boot perfectly fine. I opened a case with VMware and our Storage vendor and no one had any idea what was causing it.&lt;/p></description></item><item><title>Installing Host VIB's Using PowerCLI</title><link>https://davidstamen.com/2015/11/30/installing-host-vibs-using-powercli/</link><pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/11/30/installing-host-vibs-using-powercli/</guid><description>&lt;p>Normally when i need to install and update a host VIB I use Update Manager. However there is currently a &lt;a href="https://tools.cisco.com/bugsearch/bug/CSCuw47512/">bug&lt;/a> with Cisco&amp;rsquo;s latest enic/fnic drivers that wont let you install them via UM.&lt;/p>
&lt;p>I had to run these updates on over 50 hosts and I really didn&amp;rsquo;t want to have to ssh and install it manually. Lucky I remember &lt;a href="http://www.vtagion.com/automate-install-embedded-host-client-esxi-fling-hosts-cluster/">Brian Graf&amp;rsquo;s Host Client Install Fling&lt;/a> and borrowed some of the code to come up with the below script.&lt;/p></description></item><item><title>Disconnected vNIC's?</title><link>https://davidstamen.com/2015/11/18/disconnected-vnics/</link><pubDate>Wed, 18 Nov 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/11/18/disconnected-vnics/</guid><description>&lt;p>Ever wonder why a VM isn&amp;rsquo;t on the network?&lt;/p>
&lt;p>I was working on deploying some test VM&amp;rsquo;s and for some reason all the VM&amp;rsquo;s that were cloned decided to start with the network disconnected, and the connect on power on was also not selected.&lt;/p>
&lt;p>I decided to throw together this quick one-liner that will make sure every VM is set to start connected on power on and is currently connected.&lt;/p></description></item><item><title>Using PowerCLI to Build Out vCenter</title><link>https://davidstamen.com/2015/10/08/using-powercli-to-build-out-vcenter/</link><pubDate>Thu, 08 Oct 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/10/08/using-powercli-to-build-out-vcenter/</guid><description>&lt;p>I wanted to share this handy script i created when you have a need to build out a new vCenter.&lt;/p>
&lt;p>This script can be extremely handy as it will take care of creating the datacenter, cluster, adding hosts, creating datastores and then applying the appropriate host profile. It is all done via CSV files so it is extremely customizable.&lt;/p>
&lt;h3 id="files-to-modify-to-customize-your-configuration">Files to modify to customize your configuration&lt;/h3>
&lt;ul>
&lt;li>&lt;em>&lt;strong>createdatacenter.csv&lt;/strong>&lt;/em> - Contains the name of the datacenter to create.&lt;/li>
&lt;li>&lt;em>&lt;strong>createcluster.csv&lt;/strong>&lt;/em> - Contains the name of the cluster to create and the datacenter to put it in.&lt;/li>
&lt;li>&lt;em>&lt;strong>createhosts.csv&lt;/strong>&lt;/em> - Contains the Name of the host and which cluster to place them in.&lt;/li>
&lt;li>&lt;em>&lt;strong>createdatastores.csv&lt;/strong>&lt;/em> - Contains the name of the datastore, naaid of the lun and the datastore cluster to put it in.&lt;/li>
&lt;li>&lt;em>&lt;strong>applyhostprofile.csv&lt;/strong>&lt;/em> - Contains the name of the host and hostprofile to apply.&lt;/li>
&lt;/ul>
&lt;p>The code and Github Link can be found below.&lt;/p></description></item><item><title>Using PowerCLI to Extend VMDK and Windows OS Disk</title><link>https://davidstamen.com/2015/09/15/using-powercli-to-extend-vmdk-and-windows-os-disk/</link><pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/09/15/using-powercli-to-extend-vmdk-and-windows-os-disk/</guid><description>&lt;p>I wanted to share this handy script i created when you have a need to extend a disk.&lt;/p>
&lt;p>This script can be extremely handy as it will take care of extending the VMDK and then going to the OS and then performing the expansion there as well. This has been helpful when needing to extend a large batch of servers (60+).&lt;/p>
&lt;p>&lt;strong>Syntax:&lt;/strong> .\ExtendVMDKandGuest VMNAME&lt;/p>
&lt;p>You will then be prompted to enter in the Hard Disk #, the size you want to be extended, and then which drive letter that volume belongs to.&lt;/p></description></item><item><title>Using PowerCLI to Detach Luns</title><link>https://davidstamen.com/2015/09/14/using-powercli-to-detach-luns/</link><pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/09/14/using-powercli-to-detach-luns/</guid><description>&lt;p>I thought I would share this script, its been circulating a bit but I feel it is a nice one to have in your toolkit.&lt;/p>
&lt;p>Have you ever had to remove a LUN from a cluster and thought &amp;ldquo;Do I really need to detach all the LUN&amp;rsquo;s, before un-mapping from my SAN?&amp;rdquo;&lt;/p>
&lt;ol>
&lt;li>Unmount Datastore&lt;/li>
&lt;li>Detach LUN&lt;/li>
&lt;li>Un-map from SAN&lt;/li>
&lt;li>Rescan Cluster&lt;/li>
&lt;/ol>
&lt;p>Well here is a handy script with output. All you need to do is unmount your datastore(s), and then enter in your naaid of your LUN&amp;rsquo;s and the cluster you want to remove it from, save it an execute. All the LUN&amp;rsquo;s will be detached without having to manually go and detach it from every LUN in your cluster.&lt;/p></description></item><item><title>PowerCLI - Extend VMDK and Guest OS</title><link>https://davidstamen.com/2015/04/02/powercli-extend-vmdk-and-guest-os/</link><pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/04/02/powercli-extend-vmdk-and-guest-os/</guid><description>&lt;p>So as always things change across multiple Window&amp;rsquo;s operating systems and VMware revisions. I had a need to extend the drives on about 50 VMs today and really didn&amp;rsquo;t want to do all that clicking. I remember awhile back it was easy to do this with a Basic Set-Harddisk and use the -ResizeGuestPartition but alas that has been removed from the current functionality. So I took my search to google and found a couple scripts that worked ok, but nothing that was a seamless experience.&lt;/p></description></item><item><title>PowerCLI - Troubleshooting Multiple Default Servers</title><link>https://davidstamen.com/2015/01/29/powercli-troubleshooting-multiple-default-servers/</link><pubDate>Thu, 29 Jan 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/01/29/powercli-troubleshooting-multiple-default-servers/</guid><description>&lt;p>I use a customized version of &lt;a href="http://www.virtu-al.net/vcheck-pluginsheaders/vcheck/">http://www.virtu-al.net/vcheck-pluginsheaders/vcheck/&lt;/a> by Alan Renouf to connect to multiple servers. However a coworker of mine was trying to run it, and the script would only return data from the 2nd vCenter we were connecting to.&lt;/p>
&lt;p>Doing some troubleshooting we noticed their DefaultVIServerMode was set to single. This means that only a single servers connection will occur at once. Changing this setting is very easy, there are 3 scopes, but only one really needs to be set. You can review the 3 scope options &lt;a href="https://www.vmware.com/support/developer/PowerCLI/PowerCLI51/html/Set-PowerCLIConfiguration.html">https://www.vmware.com/support/developer/PowerCLI/PowerCLI51/html/Set-PowerCLIConfiguration.html&lt;/a>&lt;/p></description></item><item><title>PowerCLI - Enable CPU and Memory HotAdd</title><link>https://davidstamen.com/2015/01/14/powercli-enable-cpu-and-memory-hotadd/</link><pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/01/14/powercli-enable-cpu-and-memory-hotadd/</guid><description>&lt;p>I had a need to enable CPU and Memory hotadd to many virtual machines prior to a template being updated, doing some research there is no easy way, however there are some functions out there to do it. You can copy and paste each function into a powershell window and then run the associated command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Enable-MemHotAdd $ServerName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Disable-MemHotAdd $ServerName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Enable-vCPUHotAdd $ServerName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">Disable-vCPUHotAdd $ServerName
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="enable-memory-hotadd">Enable Memory HotAdd&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Function Enable-MemHotAdd($vm){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$vmview = Get-vm $vm | Get-View
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$vmConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">$extra = New-Object VMware.Vim.optionvalue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">$extra.Key=&amp;#34;mem.hotadd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">$extra.Value=&amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">$vmConfigSpec.extraconfig += $extra
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">$vmview.ReconfigVM($vmConfigSpec)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="disable-memory-hotadd">Disable Memory HotAdd&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Function Disable-MemHotAdd($vm){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$vmview = Get-VM $vm | Get-View
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$vmConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">$extra = New-Object VMware.Vim.optionvalue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">$extra.Key=&amp;#34;mem.hotadd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">$extra.Value=&amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">$vmConfigSpec.extraconfig += $extra
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">$vmview.ReconfigVM($vmConfigSpec)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="enable-cpu-hotadd">Enable CPU HotAdd&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Function Enable-vCpuHotAdd($vm){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$vmview = Get-vm $vm | Get-View
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$vmConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">$extra = New-Object VMware.Vim.optionvalue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">$extra.Key=&amp;#34;vcpu.hotadd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">$extra.Value=&amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">$vmConfigSpec.extraconfig += $extra
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">$vmview.ReconfigVM($vmConfigSpec)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="disable-cpu-hotadd">Disable CPU HotAdd&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Function Disable-vCpuHotAdd($vm){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$vmview = Get-vm $vm | Get-View
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$vmConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">$extra = New-Object VMware.Vim.optionvalue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">$extra.Key=&amp;#34;vcpu.hotadd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">$extra.Value=&amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">$vmConfigSpec.extraconfig += $extra
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">$vmview.ReconfigVM($vmConfigSpec)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="notes-enabling-cpu-hotadd-disables-vnuma-so-enable-enable-this-if-its-really-neccessary-in-your-environment">Notes: Enabling CPU Hotadd disables vNUMA. So enable enable this if its really neccessary in your environment.&lt;/h4>
&lt;p>&lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2040375">KB2040375&lt;/a>&lt;/p></description></item><item><title>Sysprep runs repeatedly on virtual machines deployed to ESXi 5.1 build 1743533</title><link>https://davidstamen.com/2014/07/08/sysprep-runs-repeatedly-on-virtual-machines-deployed-to-esxi-5-1-build-1743533/</link><pubDate>Tue, 08 Jul 2014 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2014/07/08/sysprep-runs-repeatedly-on-virtual-machines-deployed-to-esxi-5-1-build-1743533/</guid><description>&lt;p>We had a strange issue that any time a VM was snapshotted it then forced a reboot and sysprep. Reviewing the customization logs(C:\windows\temp\vmware-imc\guestcust.log) I noticed the following error..Unable to set customization status in vmx.&lt;/p>
&lt;p>Upon further research it seems this is a known issue and is resolved in ESXi 5.1 Express Patch 5 &lt;a href="http://kb.vmware.com/selfservice/search.do?cmd=displayKC&amp;amp;docType=kc&amp;amp;docTypeID=DT_KB_1_1&amp;amp;externalId=2077640">KB2077640&lt;/a> as referenced in this article &lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2078352">KB2078352&lt;/a>.&lt;/p>
&lt;p>However the hotfix only fixes future occurences, you still need to fix all the VMs affected. See below for the powercli script I created to connect to all my vcenters, get VM&amp;rsquo;s that are affected and then fix them. Please note as this is not referenced in the KB that the VM will need to be POWERED OFF and then POWERED ON for the change to go into affect. A restart will not fix it.&lt;/p></description></item><item><title>Configuring ESXi 5.5 Dump Collector</title><link>https://davidstamen.com/2014/06/10/configuring-esxi-5-5-dump-collector/</link><pubDate>Tue, 10 Jun 2014 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2014/06/10/configuring-esxi-5-5-dump-collector/</guid><description>&lt;p>Thank you to everyone who listened to me on the EMEA vBrownbag. Here are copies of documentation and scripts on how to configure ESXi to use the remote dump collector.&lt;/p>
&lt;h1 id="check-the-esxi-dump-collector-configuration-example">Check the ESXi Dump Collector Configuration Example:&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Foreach ($vmhost in (get-vmhost)){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$esxcli = Get-EsxCli -vmhost $vmhost
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$esxcli.system.coredump.network.get()}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://davidstamen.com/images/screenshot.361.jpg" alt="">&lt;/p>
&lt;h1 id="setting-the-esxi-dump-collector-example">Setting the ESXi Dump Collector Example:&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Foreach ($vmhost in (get-vmhost)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$esxcli = Get-EsxCli -vmhost $vmhost
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$esxcli.system.coredump.network.set($null, “vmk0″, “IPtoDumpCollector″, “6500″)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">$esxcli.system.coredump.network.set($true)}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://davidstamen.com/images/screenshot.351.jpg" alt="">&lt;/p></description></item><item><title>Configuring ESXi 5.5 Syslog Collector</title><link>https://davidstamen.com/2014/06/10/configuring-esxi-5-5-syslog-collector/</link><pubDate>Tue, 10 Jun 2014 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2014/06/10/configuring-esxi-5-5-syslog-collector/</guid><description>&lt;p>Thank you to everyone who listened to me on the EMEA vBrownbag. Here are copies of documentation and scripts on how to configure ESXi to use the Syslog collector.&lt;/p>
&lt;h1 id="check-the-esxi-syslog-collector-configuration-example">Check the ESXi Syslog Collector Configuration Example:&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Foreach ($vmhost in (get-vmhost)){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">$esxcli = Get-EsxCli -vmhost $vmhost
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">$esxcli.system.syslog.config.get()}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://davidstamen.com/images/screenshot.371.jpg" alt="">&lt;/p>
&lt;h1 id="setting-the-esxi-syslog-collector-example">Setting the ESXi Syslog Collector Example:&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="n">Foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">vmhost&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">vmhost&lt;/span>&lt;span class="p">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="o">$&lt;/span>&lt;span class="n">esxcli&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Get&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">EsxCli&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">vmhost&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">vmhost&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="o">$&lt;/span>&lt;span class="n">esxcli&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">syslog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;udp://IPtoSyslogServer:514″)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="o">$&lt;/span>&lt;span class="n">esxcli&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">syslog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reload&lt;/span>&lt;span class="p">()}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://davidstamen.com/images/screenshot.381.jpg" alt="">&lt;/p>
&lt;h1 id="post-installation-changes">Post-Installation Changes&lt;/h1>
&lt;p>If you wish to change the default port or maxsize of the syslog rotation, these can be changed by modifying the vmconfig-syslog.xml file. See below link with instructions on how to make the changes and restart the Syslog Collector Service.
&lt;a href="https://davidstamen.com/images/http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=2021652">2021652&lt;/a>&lt;/p></description></item><item><title>Create VMFS Datastore Using PowerCLI</title><link>https://davidstamen.com/2014/05/22/create-vmfs-datastore-using-powercli/</link><pubDate>Thu, 22 May 2014 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2014/05/22/create-vmfs-datastore-using-powercli/</guid><description>&lt;p>For upcoming testing there was a need to create 140 datastores on a cluster for testing. Who wants to do that much clicking and typing? Not me!
You can use the below PowerCLI commands to get the SCSI ID&amp;rsquo;s,  Create the Datastore and then Rescan all hosts in the cluster.&lt;/p>
&lt;h2 id="how-do-i-get-the-canonicalname-for-allocated-disks">How do i get the CanonicalName for allocated disks?&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Get-SCSILun -VMhost 192.168.1.103 -LunType Disk | Select CanonicalName,Capacity
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="how-do-i-create-a-vmfs-datastore-for-the-canonicalname-i-identified-above">How do I create a VMFS datastore for the CanonicalName I identified above?&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">New-Datastore -VMHost Host -Name Datastore -Path CanonicalName -VMFS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="how-do-i-rescan-all-the-hosts-in-the-cluster-to-see-the-new-datastore">How do i rescan all the hosts in the cluster to see the new datastore?&lt;!-- raw HTML omitted -->&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Get-Cluster -name Cluster | Get-VMhost | Get-VMHostStorage -RescanAllHBA
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Get NAA.ID for Virtual Machine RDM's in VMware</title><link>https://davidstamen.com/2014/05/06/get-naa-id-for-virtual-machine-rdms-in-vmware/</link><pubDate>Tue, 06 May 2014 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2014/05/06/get-naa-id-for-virtual-machine-rdms-in-vmware/</guid><description>&lt;p>This is a great script to keep handy. If you have multiple RDM&amp;rsquo;s on a VM and need to get the NAA_ID for them the below PowerCLI command will get you that information.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Get-VM VMNAME| Get-HardDisk -DiskType &amp;#34;RawPhysical&amp;#34;,&amp;#34;RawVirtual&amp;#34; | Select Parent,Name,DiskType,ScsiCanonicalName,DeviceName,CapacityGB | fl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://davidstamen.com/images/naaid.png" alt="">&lt;/p>
&lt;p>If you then need to match the SCSI virtual disk to the Guest OS this is a great article on how to do so.&lt;/p>
&lt;p>&lt;a href="http://kb.vmware.com/selfservice/microsites/search.do?cmd=displayKC&amp;amp;docType=kc&amp;amp;externalId=2051606">KB2051606&lt;/a>&lt;/p></description></item></channel></rss>