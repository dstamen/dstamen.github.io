<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vagrant on davidstamen</title><link>https://davidstamen.com/tags/vagrant/</link><description>Recent content in Vagrant on davidstamen</description><generator>Hugo</generator><language>en</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Mon, 12 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://davidstamen.com/tags/vagrant/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Vagrant to Deploy an Ubuntu Server running KVM</title><link>https://davidstamen.com/2015/10/12/using-vagrant-to-deploy-an-ubuntu-server-running-kvm/</link><pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/10/12/using-vagrant-to-deploy-an-ubuntu-server-running-kvm/</guid><description>&lt;p&gt;With all this talk about VMware vs KVM I figured that I would attempt to load a base install of KVM to see what it was all about.&lt;/p&gt;
&lt;p&gt;Here is a quick vagrant runbook that will quickly get a 3 linux servers deployed and installed with KVM to play with.&lt;/p&gt;
&lt;p&gt;There are 3 nodes..MGMT01,KVM01 and KVM02. I use MGMT01 VMM to manage KVM01 and KVM02.&lt;/p&gt;
&lt;p&gt;The code can be found &lt;a href="https://github.com/dstamen/Vagrant/tree/master/ubuntukvm"&gt;here.&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Using Vagrant to Deploy a 2012R2 DHCP Failover Cluster</title><link>https://davidstamen.com/2015/10/01/using-vagrant-to-deploy-a-2012r2-dhcp-failover-cluster/</link><pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/10/01/using-vagrant-to-deploy-a-2012r2-dhcp-failover-cluster/</guid><description>&lt;p&gt;So I am in the process of rolling out a new 2012R2 DHCP Server Cluster, and I thought i would share my scripts with the community.&lt;/p&gt;
&lt;p&gt;I have also rolled it into a Vagrant package so you can easily test it on your own, and execute the scripts by themselves against your environment to deploy.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dstamen/Vagrant/tree/master/windows-failoverdhcp"&gt;Here&lt;/a&gt; is a link to the &lt;strong&gt;GitHub&lt;/strong&gt; repository containing all the code.&lt;/p&gt;
&lt;p&gt;The code is also fairly simple, it pulls in data from a few .CSV files and deploy&amp;rsquo;s the servers, installs the roles, creates the scopes, creates MAC Address allow policies and then creates a couple reservations.&lt;/p&gt;</description></item><item><title>Using Vagrant to Deploy an Ubuntu Server running NGINX</title><link>https://davidstamen.com/2015/09/08/using-vagrant-to-deploy-an-ubuntu-server-running-nginx/</link><pubDate>Tue, 08 Sep 2015 00:00:00 +0000</pubDate><guid>https://davidstamen.com/2015/09/08/using-vagrant-to-deploy-an-ubuntu-server-running-nginx/</guid><description>&lt;p&gt;So as I was getting around to trying to get a host platform setup for a Jekyll blog I was looking at an alternative to GitHub Pages. I decided I would run it on Ubuntu Server using NGINX as the web platform.&lt;/p&gt;
&lt;p&gt;Here is a quick vagrant runbook that will quickly get a linux server deployed and install NGINX to host your website.&lt;/p&gt;
&lt;p&gt;The code can be found &lt;a href="https://github.com/dstamen/Vagrant/tree/master/jekyll-nginx"&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The bootstrap_linux_nginx.sh file runs the following commands to install NGINX. You can add commands to your file to automatically create your configuration and sites to publish automatically. By default this will just bring up the default nginx site.&lt;/p&gt;</description></item></channel></rss>